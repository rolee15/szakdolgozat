name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    name: Build, Test, and Analyze
    runs-on: windows-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------- Client (frontend) ----------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        working-directory: client
        run: npm ci

      - name: Run client tests with coverage (Vitest)
        working-directory: client
        run: npm run test:coverage -- --run

      # ---------- Server (backend) ----------
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build server
        run: dotnet build .\server\KanjiKa.sln --configuration Release

      - name: Run server tests with coverage (OpenCover)
        run: |
          dotnet test .\server\KanjiKa.sln `
            --logger trx `
            --results-directory .\server\TestResults `
            --collect:"XPlat Code Coverage" `
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Publish .NET test results
        uses: dorny/test-reporter@dc3a92680fcc15842eef52e8c4606ea7ce6bd3f3 # v2.1.1
        if: success() || failure()
        with:
          name: Unit Tests
          path: server/TestResults/*.trx
          reporter: dotnet-trx

      # ---------- SonarQube analysis ----------
      - name: Analyze with SonarQube
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
