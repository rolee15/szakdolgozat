name: kanjika

services:
  db:
    image: postgres:17.2
    container_name: kanjika-db
    profiles:
      - prod
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kanjika_network

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: kanjika-api
    profiles:
      - prod
    restart: always
    ports:
      - "5000:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kanjika_network

  web:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: kanjika-web
    profiles:
      - prod
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - api


volumes:
  postgres_data:

networks:
  kanjika_network:
    name: kanjika_network